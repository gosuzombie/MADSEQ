{
    "contents" : "---\ntitle: \"R Package MADSEQ\"\ndate: \"`r Sys.Date()`\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{R Package MADSEQ}\n  %\\VignetteEngine{knitr::rmarkdown}\n  \\usepackage[utf8]{inputenc}\n---\n\nThe MADSEQ package is a hierarchical Bayesian model for the detection and quantification of potential mosaic aneuploidy in sample using next generation sequencing data. \n\nThe MADSEQ package takes two pieces of information for the detection and quantification of mosaic aneuploidy:\n\n1. The distribution of the alternative allele frequencies (AAF) of the sites that are genotyped as heterozygous .\n1. The sequencing depth for each site (including all the sites with all the genotypes).\n\nThere are four different models in MADSEQ package, they are designed for different types of mosaic aneuploidy:\n\n* normal chromosome model\n* mosaic monosomy model\n* mosaic mitotic trisomy model\n* mosaic meiotic trisomy model\n\nMADSEQ works on the chromosome resolution. It applies all of the four models to fit the distribution of the alternative allele frequencies of all the heterozygous sites, and fit the distribution of the sequence depth of all the sites for that chromosome. After fitting the same data using four models, it does model comparison using BIC (Bayesian Information Criteria) to select the best model. The model selected tells us whether the chromosome is aneuploid or not, and also the type of mosaic aneuploidy. Then, from the posterior distribution of the best model, we could get the estimation of the fraction of aneuploidy cells in the sample.\n\n## Data Preparation\n\nBefore applying MADSEQ to your data, you need to process your data first to meet the requirement of the MADSEQ package. Here describes how to prepare the data for MADSEQ package.\n\n1. A dataframe contains the heterozygous sites from the chromosome you are interested in:\n\n    Put the heterozygous sites of the target chromosome into a dataframe. Each row represents a site. MADSEQ reauires at least four fields named as below in the dataframe:\n    \n    * __chr__ : the chromosome number\n    * __position__ : the position of the site\n    * __Ref_D__ : read depth for the reference allele\n    * __Alt_D__ : read depth for the alternative allele\n    \n    In the dataframe, each row represents a locus on the target chromosome, and each column contains one of the four fields that required.    \n    You should make sure that all the loci you put in the dataframe are from **the same chromosome**, and they are all **heterozygous**.\n    \n2. A numeric vector contains the read depth for all the sites from the same chromosome, and a numeric number contains the average coverage for the whole genome.\n\n\n### check if your dataframe meet the requirements:\n\nUse the `validateData()` function to check if your dataframe meet all the requirements and could be taken as the input for further analysis by MADSEQ. If the dataframe meets the requirements, it will return TRUE. If it doesn't meet the requirement, it will give an error explaining why it fails.\n\n```{r,error=TRUE,collapse=TRUE}\n# check if the dataframe \"aneuploidy\" is valid for MADSEQ analysis\nlibrary(\"MADSEQ\")\ndata(aneuploidyChrom)\ndata(invalid)\n\nvalidateData(aneuploidyChrom)\n\nvalidateData(invalid)\n\n```\n\n## Run Models\n\nWhen the data is ready, you can begin to apply the four models (normal, monosomy, mitotic trisomy, meiotic trisomy) to fit your data respectively using `runModelOne()`, `runModelMonosomy()`, `runModelTrisomy()`, `runModelFour()` functions.\n\n1. Use the **normal model** to fit the data\n```{r,eval=FALSE}\n# use the normal model to fit the aneuploidy data\nrequire(\"rjags\")\nnormal = runModelOne(data=aneuploidyChrom, data_coverage = aneuploidy_coverage, \n                     control_coverage = genome_coverage, checkConvergence=T,plot=T)\n# If checkConvergence is TRUE, it will check the convergence of the posterior distribution.\n# If plot is TRUE, it will plot the alternative allele frequency along the chromosome.\n# The function will return a MadSeqOutput object. \n## [1] \"converged!\"\n```\n\n```{r, fig.height=3, fig.width=5,fig.align='center',echo=FALSE}\npar(mar=c(2,4,2,2))\nplot(aneuploidyChrom$position,aneuploidyChrom$Alt_D/(aneuploidyChrom$Alt_D+aneuploidyChrom$Ref_D),pch=20,col=\"blue\",ylim=c(0,1),xlab=\"position\",ylab=\"Alternative Allele Frequency\")\nabline(h=mean(aneuploidyChrom$Alt_D/(aneuploidyChrom$Alt_D+aneuploidyChrom$Ref_D)),lwd=3,lty=2)\n```\n\n```{r,eval=FALSE}\n# The object of class MadSeqOutput has its own print method\nprint(normal)\n## Posterior Distribution for Parameters\n##          mean        95% HDI\n## kappa   6.930   [5.58, 8.32]\n## mu      0.464 [0.464, 0.464]\n## m_cov 130.000     [130, 130]\n## \n## BIC\n## [1] 4388.487\n# you can check the full description of each parameters at the end of this document.\n```\n\n2. Use the **mosaic monosomy** model to fit the data\n```{r,eval=FALSE}\n# use mosaic monosomy model to fit the aneuploidy data\nmonosomy = runModelMonosomy(data=aneuploidyChrom, data_coverage = aneuploidy_coverage, \n                     control_coverage = genome_coverage, checkConvergence=T,plot=F)\n## [1] \"converged!\"\n\nprint(monosomy)\n## Posterior Distribution for Parameters\n##           mean             95% HDI\n## f     1.23e-02    [7.1e-07, 0.036]\n## kappa 6.92e+00        [5.59, 8.31]\n## mu[1] 4.67e-01      [0.464, 0.473]\n## mu[2] 4.61e-01      [0.455, 0.464]\n## d1    3.11e-03 [1.77e-07, 0.00913]\n## d2    3.10e-03 [1.77e-07, 0.00911]\n## m_cov 1.29e+02          [128, 130]\n## \n## BIC\n## [1] 4400.909\n```\n\n3. Use the **mosaic mitotic trisomy** model to fit the data\n```{r,eval=FALSE}\n# use mosaic mitotic trisomy model to fit the aneuploidy data\nmitotic_trisomy = runModelTrisomy(data=aneuploidyChrom, data_coverage = aneuploidy_coverage, \n                     control_coverage = genome_coverage, checkConvergence=T,plot=F)\n\n## [1] \"converged!\"\n\nprint(mitotic_trisomy)\n## Posterior Distribution for Parameters\n##           mean         95% HDI\n## f       0.3970  [0.242, 0.567]\n## kappa   9.1400    [6.46, 12.3]\n## mu[1]   0.5470  [0.518, 0.576]\n## mu[2]   0.3830   [0.355, 0.41]\n## d1      0.0828 [0.0546, 0.112]\n## d2      0.0808 [0.0537, 0.108]\n## m_cov 156.0000      [146, 167]\n## \n## BIC\n## [1] 4371.348\n```\n\n4. Use the **mosaic meiotic trisomy** model to fit the data\n```{r,eval=FALSE}\n# use mosaic meiotic trisomy model to fit the aneuploidy data\nmeiotic_trisomy = runModelFour(data=aneuploidyChrom, data_coverage = aneuploidy_coverage, \n                     control_coverage = genome_coverage, checkConvergence=T,plot=F)\n\n## [1] \"converged!\"\n\nprint(meiotic_trisomy)\n## Posterior Distribution for Parameters\n##          mean        95% HDI\n## f       0.538 [0.498, 0.579]\n## p[1]    0.356   [0.32, 0.39]\n## p[2]    0.356   [0.32, 0.39]\n## p[3]    0.139 [0.105, 0.175]\n## p[4]    0.139 [0.105, 0.175]\n## p[5]    0.010   [0.01, 0.01]\n## kappa 102.000      [60, 144]\n## mu[1]   0.571 [0.564, 0.577]\n## mu[2]   0.360 [0.354, 0.366]\n## mu[3]   0.189   [0.177, 0.2]\n## mu[4]   0.763 [0.749, 0.777]\n## d1      0.107 [0.101, 0.113]\n## d2      0.104 [0.0977, 0.11]\n## d3      0.189   [0.177, 0.2]\n## d4      0.237 [0.223, 0.251]\n## m_cov 165.000     [162, 168]\n## \n## BIC\n## [1] 4296.878\n```\n\n\n## Model Comparison\n\nAfter fit the data with all the models, next step is compare the goodness of fit of these models using BIC. The `modelSelection()` function will return the model fit the data best. The `modelComparison()` function will calculate the delta BIC between the best model and other models. \n\n```{r, eval=FALSE}\nbest_model = modelSelection(normal, monosomy, mitotic_trisomy, meiotic_trisomy)\n## Order of the preference of models\n##     four  trisomy      one monosomy \n## 4296.408 4371.318 4388.490 4400.791 \n## \n## Best Model\n##     four \n## 4296.408 \n\nbest_model\n## [1] \"four\"\n\ndeltaBIC = modelComparison(normal, monosomy, mitotic_trisomy, meiotic_trisomy)\n\ndeltaBIC\n##    four   trisomy       one   monosomy \n## 0.00000  74.91026  92.08182  104.38283 \n\n```\n\nThe value of delta BIC suggests the strength of the evidence against the model with the higher BIC value. It can be summarized as\n\n```{r,echo=FALSE,warning=FALSE}\ndata(meiotic_trisomy)\nBIC = c(\"[0,2]\",\"(2,6]\",\"(6,10]\",\">10\")\nevidence = c(\"Not worth more than a bare mention\",\"Positive\",\"Strong\",\"Very Strong\")\ntable = data.frame(BIC,evidence)\nlibrary(knitr)\nkable(table,col.names =c(\"deltaBIC\",\"Evidence against higher BIC\") ,align=\"c\")\n```\n\nSo in the \"aneuploidy\" data, the model **meiotic trisomy** is selected with strong evidence against other models.\n\n## Analyze Posterior Distribution\nAfter you get the best model selected, you can get the estimation of the fraction of aneuploidy cells as well as other parameters using the output (an object of MadSeqOutput class, which is produced by one of the `runModel()` functions) from that model.\n\n**Note: you can check the full description of each parameter at the end of this document.**\n\n### Access Sampled Posterior Disbribution\nThe sampled posterior distribution from the model is stored in the object of MadSeqOutput class. You can access the posterior distribution of all the parameters by checking the output.\n```{r,eval=TRUE,collapse=TRUE}\n# The object of MadSeqOutput class has two component:\n# 1.posterior: a matrix stores the sampled posterior distribution;\n# 2.BIC: the BIC value for this model\nstr(meiotic_trisomy)\n```\n```{r,eval=FALSE}\n# You can access the full posterior distribution by\nmeiotic_trisomy$posterior\n\n# or\n\nmeiotic_trisomy[\"posterior\"]\n\n# In the matrix, each column is one parameter, each row is a sampled value for that parameter.\n```\n\n\n### Statistics of Posterior Disbribution\nThe `print()` function for MadSeqOutput class will print out the mean and 95% highest density interval (95% HDI) of the posterior estimation for each parameters in the model.\n\n```{r,eval=FALSE}\nprint(meiotic_trisomy)\n## Posterior Distribution for Parameters\n##          mean        95% HDI\n## f       0.538 [0.498, 0.579]\n## p[1]    0.356   [0.32, 0.39]\n## p[2]    0.356   [0.32, 0.39]\n## p[3]    0.139 [0.105, 0.175]\n## p[4]    0.139 [0.105, 0.175]\n## p[5]    0.010   [0.01, 0.01]\n## kappa 102.000      [60, 144]\n## mu[1]   0.571 [0.564, 0.577]\n## mu[2]   0.360 [0.354, 0.366]\n## mu[3]   0.189   [0.177, 0.2]\n## mu[4]   0.763 [0.749, 0.777]\n## d1      0.107 [0.101, 0.113]\n## d2      0.104 [0.0977, 0.11]\n## d3      0.189   [0.177, 0.2]\n## d4      0.237 [0.223, 0.251]\n## m_cov 165.000     [162, 168]\n## \n## BIC\n## [1] 4296.878\n```\n\nThe `summary()` function for MadSeqOutput class will produce the quantiles of the parameters from the posterior distribution.\n\n```{r,eval=FALSE}\nsummary(meiotic_trisomy)\n##        f               p[1]             p[2]             p[3]              p[4]         \n##  Min.   :0.4649   Min.   :0.2849   Min.   :0.2849   Min.   :0.07397   Min.   :0.07397 \n##  1st Qu.:0.5233   1st Qu.:0.3436   1st Qu.:0.3436   1st Qu.:0.12697   1st Qu.:0.12697    \n##  Median :0.5370   Median :0.3559   Median :0.3559   Median :0.13905   Median :0.13905  \n##  Mean   :0.5375   Mean   :0.3556   Mean   :0.3556   Mean   :0.13936   Mean   :0.13936    \n##  3rd Qu.:0.5513   3rd Qu.:0.3680   3rd Qu.:0.3680   3rd Qu.:0.15140   3rd Qu.:0.15140    \n##  Max.   :0.6163   Max.   :0.4210   Max.   :0.4210   Max.   :0.21010   Max.   :0.21010     \n##      kappa            mu[1]            mu[2]            mu[3]            mu[4]           \n##  Min.   : 37.28   Min.   :0.5589   Min.   :0.3486   Min.   :0.1674   Min.   :0.7373     \n##  1st Qu.: 86.92   1st Qu.:0.5685   1st Qu.:0.3580   1st Qu.:0.1846   1st Qu.:0.7584  \n##  Median :100.58   Median :0.5707   Median :0.3601   Median :0.1885   Median :0.7631    \n##  Mean   :101.99   Mean   :0.5708   Mean   :0.3601   Mean   :0.1886   Mean   :0.7630    \n##  3rd Qu.:115.53   3rd Qu.:0.5730   3rd Qu.:0.3622   3rd Qu.:0.1925   3rd Qu.:0.7678   \n##  Max.   :198.72   Max.   :0.5830   Max.   :0.3713   Max.   :0.2105   Max.   :0.7882  \n#.......\n```\n\n\n###Plot Posterior\nThe `plotPosterior()` function takes the object of MadSeqOutput class as the input, and print out the posterior disbribution for each parameters in the model. \n\n```{r, fig.height=4, fig.width=6,fig.align='center'}\n# you can specify the parameters that you are interested in using variable option\n# otherwise the default setting will plot all the parameters \nplotPosterior(meiotic_trisomy,variable = c(\"f\",\"kappa\",\"mu[1]\",\"mu[2]\",\"mu[3]\",\"mu[4]\"))\n```        \n    \n    \nThe `plotFraction()` function will plot the disbribution of the fraction of aneuploidy cells, labeling the mean and Highest posterior density invertals you specified (default: 95% HDI)\n```{r, fig.height=3, fig.width=4,fig.align='center'}\npar(mar=c(2,2,2,2))\nplotFraction(meiotic_trisomy,prob=0.95)\n```    \n    \nThe `plotMixture()` function will plot the posterior distributions of the alternative allele frequencies. From this plot, you can get some sense about the mean of each mixture, the weight of each mixture and the distance between mixtures.\n```{r, fig.height=3, fig.width=5,fig.align='center'}\npar(mar=c(3,4,2,2))\nplotMixture(meiotic_trisomy)\n```\n\n## Description of All Parameters\n```{r,echo=FALSE,warning=FALSE}\nparameters = c(\"f\",\"m\",\"mu[1]\",\"mu[2]\",\"mu[3]\",\"mu[4]\",\"kappa\",\"p[1]\",\"p[2]\",\"p[3]\",\"p[4]\",\"p[5]\",\"d1\",\"d2\"     \n               ,\"d3\",\"d4\",\"m_cov\",\"p_cov\",\"r_cov\")\nexplains = c(\"Fraction of mosaic aneuploidy\",\"The midpoint\",\"Mean of mixture 1: the AAFs of this mixture shifted from midpoint to some higher values\", \"Mean of mixture 2: the AAFs of this mixture shifted from midpoint to some lower values\",\"Mean of mixture 3: the AAFs of this mixture shifted from 0 to some higher value (only in meiotic model)\",\"Mean of mixture 4: the AAFs of this mixture shifted from 1 to some lower value (only in meiotic model)\",\"Indicate variance of the AAF mixtures: larger kappa means smaller variance\",\"Weight of mixture 1 (=p[2]): indicate the proportion of heterozygous sites in the mixture 1\",\"Weight of mixture 2 (=p[1]): indicate the proportion of heterozygous sites in the mixture 2\",\"Weight of mixture 3 (=p[4]): indicate the proportion of heterozygous sites in the mixture 3 (only in meiotic model)\",\"Weight of mixture 4 (=p[3]): indicate the proportion of heterozygous sites in the mixture 4 (only in meiotic model)\",\"Weight of outlier component (=0.01): the AAF of 1% sites might not well behaved, so these sites are treated as noise.\",\"Distance that mixture 1 shifted from the midpoint\",\"Distance that mixture 2 shifted from the midpoint\",\"Distance that mixture 3 shifted from 0 (only in meiotic model)\",\"Distance that mixture 4 shifted from 1 (only in meiotic model)\",\"Mean coverage of all the sites from the chromosome, estimated from a negative binomial distribution\",\"Prob of the negative binomial distribution for the coverage\",\"Another parameter (r) for the negative binomial disbribution, small r means large variance\")\ntable = data.frame(parameters,explains)\nkable(table,col.names =c(\"parameters\",\"description\") ,align=\"c\")\n```\n",
    "created" : 1438181698026.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3398580248",
    "id" : "4068EC6F",
    "lastKnownWriteTime" : 1438200680,
    "path" : "~/Project/Aneuploidy/MADSEQ/vignettes/MADSEQ-vignette.Rmd",
    "project_path" : "vignettes/MADSEQ-vignette.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}